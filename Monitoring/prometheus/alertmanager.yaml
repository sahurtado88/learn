groups:
  - name: "CopilotAssistant"
    rules:
      - alert:  API_assitant_spending_more_time_than_usual_P3
        expr: |
          avg(assistant_api_duration_seconds_count{}) > 3
        for: 1m  
        labels:
          service: assistant
          cluster: '{{ $externalLabels.cluster }}'
        annotations:
          summary: 'the duration of the call the assistant_copilot API is spending more time than usual, in cluster "{{ $externalLabels.cluster }}"'
          description: |
            ' proceed to get help from the Panther Team'

      - alert: Errors_count_possible_degradation_assistant_API_P3
        expr: |
          sum(assistant_error_total{})/sum(assistant_requests_total{}) > 0
        for: 1m  
        labels:
          service: assistant
          cluster: '{{ $externalLabels.cluster }}'
        annotations:
          summary: 'the amount of errors relative to the amount of request in assistant copilot API possible degradation in the service'
          description: |
            'Open this Confluence page 


#!/bin/bash

# Ruta del directorio donde están los archivos .yml (ajusta según tu estructura)
ALERTS_DIR="RA_IDE/helm/ftds-alerts/alert"
OUTPUT_FILE="alert_inventory.csv"

# Crear el encabezado del archivo CSV
echo "alert_name,platform,environment,file_name,threshold_time,alert_criteria" > $OUTPUT_FILE

# Recorre todos los archivos .yml en el directorio
for file in "$ALERTS_DIR"/*.yml; do
  # Obtener el nombre del archivo
  file_name=$(basename "$file")
  
  # Extraer el nombre de cada alerta
  alert_names=$(grep -P '^ *alert:' "$file" | sed -E 's/.*alert:[[:space:]]*//')

  # Extraer las expresiones 'expr' y el tiempo 'for' correspondiente a cada alerta
  exprs=$(grep -Pzo '(?s)(?<=expr: \|).*?(?=for:|labels:|$)' "$file" | sed 's/^ *//;s/\n/ /g' | tr -d '\0')
  threshold_times=$(grep -P '^ *for:' "$file" | sed -E 's/.*for:[[:space:]]*//')

  # Asumiendo que 'platform' y 'environment' sean valores fijos para Prometheus
  platform="Prometheus"
  environment="Production"

  # Asocia alert_name con expr y threshold_time
  IFS=$'\n'
  for alert_name in $alert_names; do
    # Toma el primer valor de expr y threshold_time y los empareja con la alerta
    expr=$(echo "$exprs" | sed -n 1p)
    threshold_time=$(echo "$threshold_times" | sed -n 1p)

    # Eliminar la primera línea después de usarla para la siguiente alerta
    exprs=$(echo "$exprs" | sed '1d')
    threshold_times=$(echo "$threshold_times" | sed '1d')

    # Escribir los datos en el archivo CSV
    echo "$alert_name,$platform,$environment,$file_name,$threshold_time,\"$expr\"" >> $OUTPUT_FILE
  done
done

echo "Inventario de alertas exportado a $OUTPUT_FILE"
